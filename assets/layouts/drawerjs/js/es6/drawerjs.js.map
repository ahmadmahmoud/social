{"version":3,"file":null,"sources":["../../../src/scripts/drawerjs.js"],"sourcesContent":["/**\n * A navigation drawer for mobile and web applications.\n * @class\n *\n * @example <caption>The Drawer basic template looks like:</caption>\n * <main id=\"wrapper\">\n *   <!-- the Drawer -->\n *   <aside id=\"drawerjs\" class=\"drawerjs\">\n *     <!-- your awesome navigations here... -->\n *     <h1>Drawerjs</h1>\n *   </aside>\n *   <!-- the Holder -->\n *   <section id=\"drawerjs-holder\" class=\"drawerjs-holder\">\n *     <h2>Site content</h2>\n *   </section>\n * </main>\n *\n * @example <caption>Instance the Drawer:</caption>\n * var drawer = new Drawerjs();\n */\nclass Drawerjs {\n\n  /**\n   * Create a Drawer.\n   * @constructor\n   * @param  {Object} options - An object containing key:value that representing the current Drawer.\n   */\n  constructor(options) {\n\n    /**\n     * The Drawer options.\n     * @type {Object}\n     * @property {String} align='left'                    - The Drawer position (left/right).\n     * @property {Boolean} compact=false                  - The Drawer compact mode.\n     * @property {Boolean} fixed=false                    - The Drawer fixed mode.\n     * @property {(Boolean|Object)} forcePos=false        - CSS to force the Drawer positions and dimensions. Only support `top`, `right`, `bottom`, `left`, `width`, `height`.\n     * @property {String} holder='#drawerjs-holder'       - The Holder element selector, usually targeted to site/app main content. Set to `false` if you haven't a holder, the Drawer will refer to document body.\n     * @property {String} holderClass='drawerjs-holder'   - The css class name that will added to holder selector automatically.\n     * @property {Boolean} nested=false                   - Indicator for nested Drawer. Set to `true` to use nested Drawer.\n     * @property {Boolean} open=false                     - Open/close the Drawer.\n     * @property {Boolean} pinned=false                   - If `true`, it's transform the Drawer to push/pull navigation when open/close the Drawer.\n     * @property {String} selector='#drawerjs'            - The Drawer element selector.\n     * @property {String} selectorClass='drawerjs'        - The css class name that will be added to the Drawer and used for css prefix classes.\n     * @property {(Number|String)} width='200px'          - The Drawer width for default size. Support for any css units like `rem`, `em`, or `%`.\n     * @property {(Number|String)} compactWidth='60px'    - The Drawer width for compact size. Support for any css units like `rem`, `em`, or `%`.\n     * @property {(Boolean|Object)} useCustom=false       - Use custom skins on the Drawer and the Holder. Both are support `backgroundColor` and `color` properties.\n     * @property {(Boolean|String)} autoConfig=false      - The Drawer can remember the previous options. So it still have the current states even on page reload or closing the browser. Give it the `unique string` (for storage namescpace) will enable this feature and set to `false` will disable it.\n     * @property {Boolean} holderBehavior=true            - If Activated, the Holder will translate the content when screen width < `toggleScreen` instead of using content space (You may want to disable this behavior when work with multiple drawer).\n     * @property {(Number|String)} toggleScreen='992px'   - The Drawer use it to initialize the default options, depend on screen sizes. When screen width < `toggleScreen` the Drawer will used default options for mobile.\n     * @property {Boolean} backdrop=true                  - Enable/disable the Drawer backdrop. When this property is `false` the unpinned drawer will not automatically closed on outside click.\n     * @example\n     * var options = {\n     *   align: 'left',\n     *   compact: true,\n     *   fixed: true,\n     *   useCustom: {\n     *     drawer: {\n     *       backgroundColor: '#fff',\n     *       color: '#000'\n     *     },\n     *     holder: {\n     *       backgroundColor: '#fff',\n     *       color: '#000'\n     *     }\n     *   }\n     * };\n     *\n     * var drawer = new Drawerjs(options);\n     */\n    this.options = {\n      align: 'left',\n      compact: false,\n      fixed: false,\n      forcePos: false,\n      holder: '#drawerjs-holder',\n      holderClass: 'drawerjs-holder',\n      nested: false,\n      open: false,\n      pinned: false,\n      selector: '#drawerjs',\n      selectorClass: 'drawerjs',\n      width: '200px',\n      compactWidth: '60px',\n      useCustom: false,\n      // be careful when edit below property\n      autoConfig: false,\n      _cleanStorage: false,\n      holderBehavior: true,\n      toggleScreen: '992px',\n      backdrop: true\n    }\n\n    options = options || {}\n\n    // validate width, mush have valid css unit\n    options.width = options.width ? this._validateUnit(options.width) : this.options.width\n    options.compactWidth = options.compactWidth ? this._validateUnit(options.compactWidth) : this.options.compactWidth\n\n    // force this.options depend on screen size (toggle at min-width: 992px by default)\n    if (window.matchMedia) {\n      this.options.fixed = !matchMedia(`only screen and (min-width: ${this._validateUnit(this.options.toggleScreen)})`).matches\n      this.options.open = matchMedia(`only screen and (min-width: ${this._validateUnit(this.options.toggleScreen)})`).matches\n      this.options.pinned = matchMedia(`only screen and (min-width: ${this._validateUnit(this.options.toggleScreen)})`).matches\n    }\n\n    // mixed default and custom options\n    this.options = this._extend({}, this.options, options)\n    // force options if drawer have an autoConfig options\n    this.options = (this._getState() === null) ? this.options : this._getState()\n\n    /**\n     * The Drawer element.\n     * @type {Element}\n     */\n    this.selector = typeof this.options.selector === 'object' ? this.options.selector : document.querySelector(this.options.selector)\n\n    /**\n     * The Drawer holder.\n     * If option set to `false`, the Holder will be refer to document body. Its usefull for multiple drawer instance.\n     * @type {Element}\n     */\n    this.holder = (!this.options.holder)\n      ? document.querySelector('body')\n      : document.querySelector(this.options.holder)\n\n    /**\n     * The Drawer wrapper.\n     * @type {Element}\n     */\n    this.wrapper = this.holder.parentNode\n\n    /**\n     * The Drawer uniq ID.\n     * @type {String}\n     */\n    this.hash = Math.random().toString(36).substring(7)\n\n    /**\n     * Lists of feature classes that will be added to the Drawer depend to current options.\n     * Used selectorClass for prefix.\n     * @type {Object}\n     */\n    this.classes = {\n      alignRight: this.options.selectorClass + '-has-right',\n      compact: this.options.selectorClass + '-has-compact',\n      fixed: this.options.selectorClass + '-has-fixed',\n      open: this.options.selectorClass + '-has-open',\n      close: this.options.selectorClass + '-has-close',\n      slideIn: this.options.selectorClass + '-has-slideIn',\n      pinned: this.options.selectorClass + '-has-pinned',\n      wrapper: this.options.selectorClass + '-wrapper'\n    }\n\n    // Initialization\n    this.init()\n  }\n\n  /** Private methods */\n  /**\n   * Listen on document when the page is ready.\n   * @private\n   * @param  {Function} handler - The callback function when page is ready.\n   * @return {void}\n   */\n  _onReady(handler) {\n    if(document.readyState != 'loading') {\n      handler()\n    } else {\n      document.addEventListener('DOMContentLoaded', handler, false)\n    }\n  }\n\n  /**\n   * Merge the contents of two or more objects together into the first object.\n   * @private\n   * @param  {Object} obj - An object containing additional properties to merge in.\n   * @return {Object} The merged object.\n   */\n  _extend(obj) {\n    obj = obj || {}\n    const args = arguments\n    for (let i = 1; i < args.length; i++) {\n      if (!args[i]) continue\n      for (let key in args[i]) {\n        if (args[i].hasOwnProperty(key))\n          obj[key] = args[i][key]\n      }\n    }\n    return obj\n  }\n\n  /**\n   * Validate unit value to support Drawer rules.\n   * @private\n   * @param  {(Number|String)} unit - Unit value to validate.\n   * @return {Boolean} Has valid unit.\n   */\n  _validateUnit(unit) {\n    const expr = /(^[\\d]+((px)|(vw)|(r?em)|(\\%))$)|^(initial|inherit|auto|0)$/i\n    return expr.test(unit) ? unit : `${/[^\\.\\sa-z]\\d*\\.?\\d*/g.exec(unit)[0]}px`\n  }\n\n  /**\n   * Attach an event to Drawer selector.\n   * @private\n   * @param  {String} type - The name of the event (case-insensitive).\n   * @param  {(Boolean|Number|String|Array|Object)} data - The custom data that will be added to event.\n   * @return {void}\n   */\n  _emit(type, data) {\n    let e\n    if (document.createEvent) {\n      e = document.createEvent('Event')\n      e.initEvent(type, true, true)\n    } else {\n      e = document.createEventObject()\n      e.eventType = type\n    }\n    e.eventName = type\n    e.data = data || this\n    // attach event to selector\n    document.createEvent\n      ? this.selector.dispatchEvent(e)\n      : this.selector.fireEvent('on' + type, e)\n  }\n\n  /**\n   * Registers the specified listener on the element.\n   * @private\n   * @param  {Element} el - The target element.\n   * @param  {String} type - The name of the event.\n   * @param  {Function} handler - The callback function when event type is fired.\n   * @return {void}\n   */\n  _on(el, type, handler) {\n    let types = type.split(' ')\n    for (let i = 0; i < types.length; i++) {\n      el[window.addEventListener ? 'addEventListener' : 'attachEvent']( window.addEventListener ? types[i] : `on${types[i]}` , handler, false)\n    }\n  }\n\n  /**\n   * Removes the event listener previously registered with [_on()]{@link Drawerjs#_on} method.\n   * @private\n   * @param  {Element} el - The target element.\n   * @param  {String} type - The name of the event.\n   * @param  {Function} handler - The callback function when event type is fired.\n   * @return {void}\n   */\n  _off(el, type, handler) {\n    let types = type.split(' ')\n    for (let i = 0; i < types.length; i++) {\n      el[window.removeEventListener ? 'removeEventListener' : 'detachEvent']( window.removeEventListener ? types[i] : `on${types[i]}` , handler, false)\n    }\n  }\n\n  /**\n   * Adds one or more class names to the target element.\n   * @private\n   * @param {Element} el - The target element.\n   * @param {String} className - Specifies one or more class names to be added.\n   * @return {void}\n   */\n  _addClass(el, className) {\n    let classes = className.split(' ')\n    for (let i = 0; i < classes.length; i++) {\n      if (el.classList) el.classList.add(classes[i])\n      else el.classes[i] += ' ' + classes[i]\n    }\n  }\n\n  /**\n   * Removes one or more class names to the target element.\n   * @private\n   * @param {Element} el - The target element.\n   * @param {String} className - Specifies one or more class names to be added.\n   * @return {void}\n   */\n  _removeClass(el, className) {\n    let classes = className.split(' ')\n    for (let i = 0; i < classes.length; i++) {\n      if (el.classList) el.classList.remove(classes[i])\n      else el.classes[i] = el.classes[i].replace(new RegExp('(^|\\\\b)' + classes[i].split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ')\n    }\n  }\n\n  /**\n   * Get the current Drawer width.\n   * @private\n   * @param  {Boolean} isCompact - The current value of compact value.\n   * @return {String} The current Drawer width.\n   */\n  _drawerWidth(isCompact) {\n    return isCompact ? this.options.compactWidth : this.options.width\n  }\n\n  /**\n   * Apply the current Drawer width.\n   * @private\n   * @return {void}\n   */\n  _renderWidth() {\n    this.selector.style.width = this._drawerWidth(this.isCompact())\n  }\n\n  /**\n   * Clear the Holder space.\n   * @private\n   * @return {void}\n   */\n  _clearSpace() {\n    // for holder = body\n    this.holder.style.paddingRight = 0\n    this.holder.style.paddingLeft = 0\n    // for holder = specific element\n    this.holder.style.marginRight = 0\n    this.holder.style.marginLeft = 0\n    // for screen width < toggleScreen\n    this.holder.style.transform = ''\n  }\n\n  /**\n   * Give space to the Holder.\n   * @private\n   * @return {void}\n   */\n  _holderSpace() {\n    let opts = this.options\n    let space = !opts.holder ? 'padding' : 'margin'\n    // clear space\n    this._clearSpace()\n    // holder behavior: translate holder instead of adding space on screen width < toggleScreen\n    if (opts.holderBehavior && !this.isCompact() && !matchMedia(`only screen and (min-width: ${this._validateUnit(this.options.toggleScreen)})`).matches) {\n      if (opts.pinned && opts.open) {\n        if (opts.align === 'right') {\n          this.holder.style.transform = `translateX(-${this._drawerWidth(this.isCompact())})`\n        } else if(opts.align === 'left') {\n          this.holder.style.transform = `translateX(${this._drawerWidth(this.isCompact())})`\n        }\n      }\n    } else {\n      // add space by align\n      if (opts.pinned && opts.open) {\n        if (opts.align === 'right') {\n          this.holder.style[`${space}Right`] = this._drawerWidth(this.isCompact())\n        } else if(opts.align === 'left') {\n          this.holder.style[`${space}Left`] = this._drawerWidth(this.isCompact())\n        }\n      }\n    }\n  }\n\n  /**\n   * Add/remove the current Drawer backdrop depend with pinned option.\n   * @private\n   * @return {void}\n   */\n  _backdrop() {\n    const self = this\n    const hashId = `backdrop-${this.hash}`\n    let opts = this.options\n    let body = document.querySelector('body')\n    let el = document.createElement('div')\n\n    el.setAttribute('id', hashId)\n    this._addClass(el, `${opts.selectorClass}-backdrop`)\n\n    if (!this.isPinned() && opts.backdrop) {\n      let backdropEl = document.querySelector(`#${hashId}`)\n      if (!body.contains(backdropEl)) {\n        body.appendChild(el)\n        this._on(el, 'click', () => {\n          self.close()\n        })\n      }\n      if (this.isOpen()) {\n        document.querySelector(`#${hashId}`).style.display = 'block'\n      }\n    } else {\n      let backdropEl = document.querySelector(`#${hashId}`)\n      if (body.contains(backdropEl)) backdropEl.parentNode.removeChild(backdropEl)\n    }\n  }\n\n  /**\n   * A transition that is used when open the Drawer.\n   * @private\n   * @return {void}\n   */\n  _transitionIn() {\n    this._addClass(this.selector, this.classes.slideIn)\n    this.selector.style.width = this._drawerWidth(this.isCompact())\n    // transitionIn when forcePos.height is exist\n    const pos = this.options.forcePos\n    if (pos.hasOwnProperty('height')) this.selector.style.height = pos.height\n  }\n\n  /**\n   * A transition that is used when close the Drawer.\n   * @private\n   * @return {void}\n   */\n  _transitionOut() {\n    this._removeClass(this.selector, this.classes.slideIn)\n    this.selector.style.width = 0\n    // transitionIn when forcePos.height is exist\n    const pos = this.options.forcePos\n    if (pos.hasOwnProperty('height')) this.selector.style.height = 0\n  }\n\n  /**\n   * Get the correct transitionend event for any browser.\n   * @private\n   * @param  {Element} el - The target element.\n   * @return {String} The name of the transitionend.\n   */\n  _transitionEnd(el) {\n    const transEndEventNames = {\n      'WebkitTransition' : 'webkitTransitionEnd',\n      'MozTransition'    : 'transitionend',\n      'OTransition'      : 'oTransitionEnd otransitionend',\n      'transition'       : 'transitionend'\n    }\n    for (let name in transEndEventNames) {\n      if (el.style[name] !== undefined) {\n        return transEndEventNames[name]\n      }\n    }\n  }\n\n  /**\n   * Set the Drawer wrapper background color same as the Drawer.\n   * @private\n   * @return {void}\n   */\n  _addFakeHeight() {\n    const backgroundColor = window.getComputedStyle(this.selector).backgroundColor\n    this.wrapper.style.backgroundColor = backgroundColor\n  }\n\n  /**\n   * Remove the Drawer wrapper background color given by [_addFakeHeight()]{@link Drawerjs#_addFakeHeight} method.\n   * @private\n   * @return {void}\n   */\n  _removeFakeHeight() {\n    this.wrapper.style.backgroundColor = ''\n  }\n\n  /**\n   * Update the current state options.\n   * @private\n   * @since 1.2.0\n   * @param {String} key - Options property key.\n   * @param {(Boolean|Number|String|Object)} value - Options property value.\n   * @return {void}\n   */\n  _setState(key, value) {\n\n    if (key)\n      this.options[key] = value\n\n    // store to localstorage, only store if string\n    if (typeof this.options.autoConfig === 'string' || this.options.autoConfig instanceof String)\n      localStorage.setItem(`drawerjs_${this.options.autoConfig}`, JSON.stringify(this.options))\n\n    /**\n     * This event is fired when the Drawer options has changed.\n     *\n     * @event Drawerjs#drawer:stateChanged\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:stateChanged', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:stateChanged', function() {\n     *   console.log('fired on drawer:stateChanged!!');\n     * });\n     */\n    this._emit('drawer:stateChanged')\n  }\n\n  /**\n   * Get the current state options.\n   * @private\n   * @since 1.2.0\n   * @return  {Object} The current state options.\n   */\n  _getState() {\n    return JSON.parse(localStorage.getItem(`drawerjs_${this.options.autoConfig}`))\n  }\n\n\n  /** Public methods */\n  /**\n   * The first process that called after constructs the Drawer instance.\n   * @public\n   * @fires Drawerjs#drawer:init\n   * @return {void}\n   */\n  init() {\n    const self = this\n    let opts = this.options\n\n    this._addClass(this.selector, opts.selectorClass)\n    this._addClass(this.holder, opts.holderClass)\n    this._addClass(this.wrapper, this.classes.wrapper)\n\n    // give default width\n    this._renderWidth()\n    // hold transition, hide transition on init\n    this._addClass(this.selector, `${opts.selectorClass}-hold-transition`)\n    this._addClass(this.holder, `${opts.selectorClass}-hold-transition`)\n    // trigger transition\n    this._on(this.selector, this._transitionEnd(this.selector), () => {\n      if(!self.isOpen()) {\n        self.selector.style.opacity = '0'\n        self.selector.style.visibility = 'hidden'\n      }\n    })\n    // stop anaimateEnd bubling event\n    if (this.selector.hasChildNodes()) {\n      let children = this.selector.children\n      Array.prototype.forEach.call(children, el => {\n        self._on(el, self._transitionEnd(el), e => {\n          e.stopPropagation()\n        })\n      })\n    }\n\n    // is nested\n    if (opts.nested) {\n      this.wrapper.style.position = 'relative'\n    }\n\n    // implement autoConfig feature\n    this.autoConfig(opts.autoConfig)\n    // implement placement feature\n    this.align(opts.align)\n    // implement compact feature\n    this.compact(opts.compact)\n    // implement fixed feature\n    this.fixed(opts.fixed)\n    // force css position\n    this.forcePos(opts.forcePos)\n    // implement pinned feature\n    this.pinned(opts.pinned)\n    // use custom\n    this.custom(opts.useCustom)\n    // implement show/hide feature\n    this.isOpen() ? this.open() : this.close()\n\n    // update states\n    this._setState()\n\n    // on ready state\n    this._onReady(() => {\n      // resume transition\n      setTimeout(() => {\n        self._removeClass(self.selector, `${opts.selectorClass}-hold-transition`)\n        self._removeClass(self.holder, `${opts.selectorClass}-hold-transition`)\n      }, 150)\n\n      /**\n       * This event is fired when the Drawer has completed init.\n       *\n       * @event Drawerjs#drawer:init\n       * @type {Object}\n       * @property {Object} data - The Drawerjs data instance.\n       *\n       * @example\n       * document.querySelector('#drawerjs').addEventListener('drawer:init', function(e) {\n       *   console.log(e.data);\n       * });\n       * @example <caption>Or using jQuery:</caption>\n       * $('#drawerjs').on('drawer:init', function() {\n       *   console.log('fired on drawer:init!!');\n       * });\n       */\n      self._emit('drawer:init')\n    })\n  }\n\n  /**\n   * Turn on/off auto config feature.\n   *\n   * **Note:** Set `autoConfig` to `true` will not enable this feature. You must give a (unique) string instead.\n   * @since 1.2.0\n   *\n   * @param  {(Boolean/String)} namespace A unique string to enable this feature or boolean `false` to disable it.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.autoConfig('myDrawerNavigation');\n   */\n  autoConfig(namespace) {\n    try {\n      if(namespace === true) {\n        throw {\n          name: 'Drawerjs Warning',\n          msg: 'You must have a unique namescpace for each Drawer!'\n        }\n      }\n    }\n    catch(err) {\n      console.warn(`${err.name}: ${err.msg}`)\n    }\n\n    // remove previous storage if any\n    if(this.options.autoConfig && this.options._cleanStorage)\n      localStorage.removeItem(`drawerjs_${this.options.autoConfig}`)\n\n    // update states\n    this._setState('autoConfig', namespace)\n\n    /**\n     * This event is fired when the Drawer turn on/off autoConfig feature.\n     *\n     * @event Drawerjs#drawer:autoConfig\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:autoConfig', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:autoConfig', function() {\n     *   console.log('fired on drawer:autoConfig!!');\n     * });\n     */\n    this._emit('drawer:autoConfig')\n\n    return this\n  }\n\n  /**\n   * Set the Drawer position to `left` or `right`.\n   * @public\n   * @fires Drawerjs#drawer:align\n   * @param  {String} position - The position that will be set to the Drawer.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.align('right');\n   */\n  align(position) {\n    const classes = this.classes\n\n    if (position === 'right') {\n      this._addClass(this.selector, classes.alignRight)\n    } else {\n      this._removeClass(this.selector, classes.alignRight)\n    }\n\n    // update states\n    this._setState('align', position)\n\n    // refresh holder space\n    this._holderSpace()\n\n    /**\n     * This event is fired when the Drawer has changed position.\n     *\n     * @event Drawerjs#drawer:align\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:align', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:align', function() {\n     *   console.log('fired on drawer:align!!');\n     * });\n     */\n    this._emit('drawer:align')\n\n    return this\n  }\n\n  /**\n   * Determine whether the Drawer is currently compact.\n   * @public\n   * @return {Boolean} is compact.\n   *\n   * @example\n   * var isCompact = drawer.isCompact();\n   */\n  isCompact() {\n    return this.options.compact\n  }\n\n  /**\n   * Toggle the Drawer compact mode.\n   * @public\n   * @fires Drawerjs#drawer:compact\n   * @param  {Boolean} isCompact - The compact mode.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.compact(true);\n   */\n  compact(isCompact) {\n    const method = (isCompact) ? '_addClass': '_removeClass'\n    const classes = this.classes\n\n    this[method](this.selector, classes.compact)\n\n    // update states\n    this._setState('compact', isCompact)\n\n    // draw current width\n    this._renderWidth()\n    // refresh holder space\n    this._holderSpace()\n\n    /**\n     * This event is fired when the Drawer has completed toggle compact mode.\n     *\n     * @event Drawerjs#drawer:compact\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:compact', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:compact', function() {\n     *   console.log('fired on drawer:compact!!');\n     * });\n     */\n    this._emit('drawer:compact')\n\n    return this\n  }\n\n  /**\n   * Determine whether the Drawer is currently fixed.\n   * @public\n   * @return {Boolean} Is fixed.\n   *\n   * @example\n   * var isFixed = drawer.isFixed();\n   */\n  isFixed() {\n    return this.options.fixed\n  }\n\n  /**\n   * Toggle the Drawer fixed mode.\n   * @public\n   * @fires Drawerjs#drawer:fixed\n   * @param  {Boolean} isFixed - The fixed mode.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.fixed(true);\n   */\n  fixed(isFixed) {\n    const method = (isFixed) ? '_addClass': '_removeClass'\n    const classes = this.classes\n\n    // just added fake synchronous backgroundColor to wrapper\n    isFixed ? this._removeFakeHeight() : this._addFakeHeight()\n    this[method](this.selector, classes.fixed)\n    // force redraw/repaint to fixed -webkit- overflow render\n    this.selector.style.display = 'none'\n    this.selector.offsetHeight\n    this.selector.style.display = ''\n\n    // update states\n    this._setState('fixed', isFixed)\n\n    /**\n     * This event is fired when the Drawer has completed toggle fixed mode.\n     *\n     * @event Drawerjs#drawer:fixed\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:fixed', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:fixed', function() {\n     *   console.log('fired on drawer:fixed!!');\n     * });\n     */\n    this._emit('drawer:fixed')\n\n    return this\n  }\n\n  /**\n   * Whether the Drawer is currently open.\n   * @public\n   * @return {Boolean} Is open.\n   *\n   * @example\n   * var isOpen = drawer.isOpen();\n   */\n  isOpen() {\n    return this.options.open\n  }\n\n  /**\n   * Open/show the Drawer.\n   * @public\n   * @fires Drawerjs#drawer:open\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.open();\n   */\n  open() {\n    const classes = this.classes\n\n    this._transitionIn()\n    this._addClass(this.selector, classes.open)\n    this._removeClass(this.selector, classes.close)\n    this.selector.style.overflow = ''\n    this.selector.style.opacity = ''\n    this.selector.style.visibility = ''\n    // show backdrop\n    if (!this.isPinned() && this.options.backdrop) {\n      const backdrop = document.querySelector(`#backdrop-${this.hash}`)\n      backdrop.style.display = 'block'\n    }\n\n    // update states\n    this._setState('open', true)\n\n    // refresh holder space\n    this._holderSpace()\n\n    /**\n     * This event is fired when the Drawer has open.\n     *\n     * @event Drawerjs#drawer:open\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:open', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:open', function() {\n     *   console.log('fired on drawer:open!!');\n     * });\n     */\n    this._emit('drawer:open')\n\n    return this\n  }\n\n  /**\n   * Close/hide the Drawer.\n   * @public\n   * @fires Drawerjs#drawer:close\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.close();\n   */\n  close() {\n    const classes = this.classes\n\n    this._transitionOut()\n    this._addClass(this.selector, classes.close)\n    this._removeClass(this.selector, classes.open)\n    this.selector.style.overflow = 'hidden'\n    // hide backdrop\n    if (!this.isPinned() && this.options.backdrop) {\n      const backdrop = document.querySelector(`#backdrop-${this.hash}`)\n      backdrop.style.display = ''\n    }\n\n    // update states\n    this._setState('open', false)\n\n    // refresh holder space\n    this._holderSpace()\n\n    /**\n     * This event is fired when the Drawer has close.\n     *\n     * @event Drawerjs#drawer:close\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:close', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:close', function() {\n     *   console.log('fired on drawer:close!!');\n     * });\n     */\n    this._emit('drawer:close')\n\n    return this\n  }\n\n  /**\n   * Toggle open/close the Drawer. This method trigger both `open` and `close` event.\n   * @public\n   * @fires Drawerjs#drawer:open\n   * @fires Drawerjs#drawer:close\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.toggle();\n   */\n  toggle() {\n    const method = (!this.isOpen()) ? 'open' : 'close'\n\n    this[method]()\n\n    return this\n  }\n\n  /**\n   * Determine whether the Drawer is currently pinned.\n   * @public\n   * @return {Boolean} Is pinned.\n   *\n   * @example\n   * var isPinned = drawer.isPinned();\n   */\n  isPinned() {\n    return this.options.pinned\n  }\n\n  /**\n   * Toggle the Drawer pinned mode.\n   * @public\n   * @fires Drawerjs#drawer:pinned\n   * @param  {Boolean} isPinned - The pinned mode.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.pinned(true);\n   */\n  pinned(isPinned) {\n    const method = (isPinned) ? '_addClass': '_removeClass'\n    const classes = this.classes\n\n    this[method](this.selector, classes.pinned)\n\n    // update states\n    this._setState('pinned', isPinned)\n\n    // add/remove backdrop\n    this._backdrop()\n    // refresh holder space\n    this._holderSpace()\n\n    /**\n     * This event is fired when the Drawer has completed toggle pinned.\n     *\n     * @event Drawerjs#drawer:pinned\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:pinned', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:pinned', function() {\n     *   console.log('fired on drawer:pinned!!');\n     * });\n     */\n    this._emit('drawer:pinned')\n\n    return this\n  }\n\n\n  /** Behavior methods */\n  /**\n   * Get the default Drawer width.\n   * @public\n   * @return {String} CSS unit value.\n   *\n   * @example\n   * var width = drawer.getWidth();\n   */\n  getWidth() {\n    return this.options.width\n  }\n\n  /**\n   * Set the default Drawer width.\n   * @public\n   * @fires Drawerjs#drawer:changeWidth\n   * @param {(Number|String)} width - The Drawer width.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.setWidth('300px');\n   */\n  setWidth(width) {\n    // update states\n    this._setState('width', this._validateUnit(width))\n\n    // refresh width\n    this._renderWidth()\n    // refresh holder space\n    this._holderSpace()\n\n    /**\n     * This event is fired when the Drawer has changed width.\n     *\n     * @event Drawerjs#drawer:changeWidth\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:changeWidth', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:changeWidth', function() {\n     *   console.log('fired on drawer:changeWidth!!');\n     * });\n     */\n    this._emit('drawer:changeWidth')\n\n    return this\n  }\n\n  /**\n   * Get the compact Drawer width.\n   * @public\n   * @return {String} CSS unit value.\n   *\n   * @example\n   * var compactWidth = drawer.getCompactWidth();\n   */\n  getCompactWidth() {\n    return this.options.compactWidth\n  }\n\n  /**\n   * Set the compact Drawer width.\n   * @public\n   * @fires Drawerjs#drawer:changeCompactWidth\n   * @param {(Number|String)} width - The Drawer width.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.setCompactWidth(100);\n   */\n  setCompactWidth(width) {\n    // update states\n    this._setState('compactWidth', this._validateUnit(width))\n\n    // refresh width\n    this._renderWidth()\n    // refresh holder space\n    this._holderSpace()\n\n    /**\n     * This event is fired when the Drawer has changed compact width.\n     *\n     * @event Drawerjs#drawer:changeCompactWidth\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:changeCompactWidth', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:changeCompactWidth', function() {\n     *   console.log('fired on drawer:changeCompactWidth!!');\n     * });\n     */\n    this._emit('drawer:changeCompactWidth')\n\n    return this\n  }\n\n  /**\n   * Adds css property to force Drawer positions and dimentions.\n   * @public\n   * @fires Drawerjs#drawer:forcePos\n   * @param {Boolean|Object} pos - Only support CSS properties below:\n   * @param {(Number|String)} pos.top       - CSS top property (default unit is `px`).\n   * @param {(Number|String)} pos.right     - CSS right property (default unit is `px`).\n   * @param {(Number|String)} pos.bottom    - CSS bottom property (default unit is `px`).\n   * @param {(Number|String)} pos.left      - CSS left property (default unit is `px`).\n   * @param {(Number|String)} pos.width     - CSS width property (default unit is `px`).\n   * @param {(Number|String)} pos.height    - CSS height property (default unit is `px`).\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.forcePos({\n   *   top: '60px'\n   * });\n   */\n  forcePos(pos) {\n    const self = this\n\n    if (typeof pos === 'object') {\n      for(let key in pos) {\n        let expr = /^(top|left|right|bottom|width|height)$/g\n        if (expr.test(key)) {\n          self.selector.style.minHeight = 0\n          self.selector.style[key] = self._validateUnit(pos[key])\n        }\n        else {\n          console.warn(`This method doesn't support for css ${key}. Only support for top|right|bottom|left|width|height.`)\n        }\n      }\n      // special prop\n      if(pos.hasOwnProperty('height')) this.selector.style.minHeight = 0\n      if(pos.hasOwnProperty('width')) this.setWidth(pos['width'])\n      if((pos.hasOwnProperty('top') || pos.hasOwnProperty('bottom')) && pos.hasOwnProperty('right') && pos.hasOwnProperty('left')) this.selector.style.transition = 'height 150ms linear'\n      if(pos.hasOwnProperty('right') && pos.hasOwnProperty('left')) {\n        this.selector.style.maxWidth = '100%'\n        this.selector.style.transform = 'translateX(0)'\n      }\n    } else {\n      // reset force position\n      this.selector.style.maxWidth = ''\n      this.selector.style.minHeight = ''\n      this.selector.style.transform = ''\n      this.selector.style.transition = ''\n      this.selector.style.top = ''\n      this.selector.style.right = ''\n      this.selector.style.bottom = ''\n      this.selector.style.left = ''\n    }\n\n    // update states\n    this._setState('forcePos', pos)\n\n    /**\n     * This event is fired when the Drawer has force position.\n     *\n     * @event Drawerjs#drawer:forcePos\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:forcePos', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:forcePos', function() {\n     *   console.log('fired on drawer:forcePos!!');\n     * });\n     */\n    this._emit('drawer:forcePos')\n\n    return this\n  }\n\n  /**\n   * Custom using css property for the Drawer and the Holder.\n   * @public\n   * @fires Drawerjs#drawer:custom\n   * @param {(Boolean|Object)} useCustom - The Drawer custom property.\n   * @param {String} useCustom.drawer.backgroundColor - The Drawer backgroundColor property.\n   * @param {String} useCustom.drawer.color           - The Drawer color property.\n   * @param {String} useCustom.holder.backgroundColor - The Holder backgroundColor property.\n   * @param {String} useCustom.holder.color           - The Holder color property.\n   * @return {Object} The Drawer instance.\n   *\n   * @example\n   * drawer.custom({\n   *   drawer: {\n   *     backgroundColor: '#f7f7f7',\n   *     color: '#333'\n   *   }\n   * });\n   */\n  custom(useCustom) {\n    const self = this\n\n    if (useCustom.hasOwnProperty('drawer') || useCustom.hasOwnProperty('holder')) {\n      for(let elem in useCustom) {\n        for(let prop in useCustom[elem]) {\n          let regElem = /^(drawer|holder)$/g\n          let regProp = /^(backgroundColor|color)$/g\n          let target = elem === 'drawer' ? 'selector' : 'holder'\n          if (regElem.test(elem) && regProp.test(prop)) self[target].style[prop] = useCustom[elem][prop]\n          else console.warn(`Unsupported property in useCustom: ${elem} or ${prop} is not a supported property.`)\n        }\n      }\n      // re-touch the wrapper\n      this._addFakeHeight()\n    } else {\n      this.selector.style.backgroundColor = ''\n      this.selector.style.color = ''\n      this.holder.style.backgroundColor = ''\n      this.holder.style.color = ''\n      // re-touch the wrapper\n      this._removeFakeHeight()\n    }\n\n    // update states\n    this._setState('useCustom', useCustom)\n\n    /**\n     * This event is fired when the Drawer has customized.\n     *\n     * @event Drawerjs#drawer:custom\n     * @type {Object}\n     * @property {Object} data - The Drawerjs data instance.\n     *\n     * @example\n     * document.querySelector('#drawerjs').addEventListener('drawer:custom', function(e) {\n     *   console.log(e.data);\n     * });\n     * @example <caption>Or using jQuery:</caption>\n     * $('#drawerjs').on('drawer:custom', function() {\n     *   console.log('fired on drawer:custom!!');\n     * });\n     */\n    this._emit('drawer:custom')\n\n    return this\n  }\n}\n\nexport default Drawerjs\n"],"names":["let","backdropEl"],"mappings":"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"}